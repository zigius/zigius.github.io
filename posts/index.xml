<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on zlog - the zigius blog</title><link>https://zigius.github.io/posts/</link><description>Recent content in Posts on zlog - the zigius blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 03 Jan 2024 16:56:22 +0200</lastBuildDate><atom:link href="https://zigius.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Hide Fzf Files</title><link>https://zigius.github.io/posts/hide-fzf-files/</link><pubDate>Wed, 03 Jan 2024 16:56:22 +0200</pubDate><guid>https://zigius.github.io/posts/hide-fzf-files/</guid><description>Hide Fzf Files To hide files from fzf, create a .ignore in the root of your project and add the files you want to ignore. For example, if you want to ignore node_modules and vendor directories, add the following to .ignore:
node_modules vendor The command to use as your FZF_DEFAULT_COMMAND so that it will respect the .ignore file is:
rg --files --no-ignore-vcs --hidden This will only ignore files in the .</description></item><item><title>Emr Studio Notebook Setup</title><link>https://zigius.github.io/posts/emr-studio-notebook-setup/</link><pubDate>Tue, 02 Jan 2024 19:17:58 +0200</pubDate><guid>https://zigius.github.io/posts/emr-studio-notebook-setup/</guid><description>Common issue we faced when setting up EMR Studio was that we could not connect to the notebook. The error message was:
Error: Unable to attach to cluster j-XXXXXXXXXXX. Reason: Attaching the workspace(notebook) failed. Internal error The solution was to run the following command in the EMR cluster after SSH to the master node:
sudo systemctl start hadoop-httpfs sudo systemctl status hadoop-httpfs Alternatively, you can add the following EMR step to the cluster:</description></item><item><title>Vim Search and Replace</title><link>https://zigius.github.io/posts/vim-search-and-replace/</link><pubDate>Sun, 07 May 2023 17:41:39 +0300</pubDate><guid>https://zigius.github.io/posts/vim-search-and-replace/</guid><description>Search and replace text in Vim buffers To search and replace text in Vim using regexes you can use one of the following options:
Using normal mode :%g/Page \d\+/#\d\+ Highlight/norm! ^f#r Normal search and replace :%s/\(Page \d\+\) \(#\d\+ Highlight\)/\1\r\2/g Vim very magic mode :%s/\v(Page \d+) (#\d+ Highlight)/\1\r\2/g I personally like the third option as it is the easiest to use. The second option using normal search and replace might be the most obvious, but adds a lot of clutter.</description></item><item><title>Search and replace in vim</title><link>https://zigius.github.io/posts/working-with-vim-quickfix/</link><pubDate>Sat, 18 Feb 2023 15:35:17 +0200</pubDate><guid>https://zigius.github.io/posts/working-with-vim-quickfix/</guid><description>Why use the quickfix list? Recently I started using the quickfix list in vim, a hidden gem in the vim ecosystem. The main reason I started working with the qf list is I wanted a way to search and replace text in multiple files in my project.
getting started - search I use telescope and FZF as my search plugins, but they do not provide replace functionality out of the box.</description></item><item><title>Create Neovim Plugin</title><link>https://zigius.github.io/posts/create-neovim-plugin/</link><pubDate>Sat, 14 Jan 2023 15:57:29 +0200</pubDate><guid>https://zigius.github.io/posts/create-neovim-plugin/</guid><description>DISCLAMER: This blog post will be updated every time i improve the workflow I use when creating plugins
I recently started working on creating some plugins in neovim. In this post I will show you how I created a simple plugin to open the current file in Obsidian
getting started First I created a github repo for my plugin. The name I gave my repo is open-in-obsidian.nvim here is the link to the repo if you simply want to view the code.</description></item><item><title>Monitor Athena Datalake Tables Part 2</title><link>https://zigius.github.io/posts/monitor-athena-datalake-tables-part-2/</link><pubDate>Sun, 01 Jan 2023 16:12:24 +0200</pubDate><guid>https://zigius.github.io/posts/monitor-athena-datalake-tables-part-2/</guid><description>In the previous post we explored various monitoring solutions for monitoring athena tables. One of the scenarios we wanted to be able to monitor, was a case where a partition has been unintentinally deleted from an athena table
We decided we will use S3 inventory to monitor this flow.
This is how we do it:
First let&amp;rsquo;s try and break down the pseudo code we need to write:
1. get all athena tables partitions, using glue 2.</description></item><item><title>Monitor Athena Datalake Tables</title><link>https://zigius.github.io/posts/monitor-athena-datalake-tables/</link><pubDate>Mon, 26 Dec 2022 19:42:36 +0200</pubDate><guid>https://zigius.github.io/posts/monitor-athena-datalake-tables/</guid><description>Today we are going to talk about monitoring our datalake tables.
Let&amp;rsquo;s assume we have a datalake containing more than 3PB of data. The raw data is saved as compressed parquet files in S3. We query our datalake using athena. We needed a way to monitor our data to be able to quickly detect issues in our data pipeline.
We decided we want to be able to monitor various scenarios.</description></item><item><title>Embedding an image in a markdown file using google api and luasnip</title><link>https://zigius.github.io/posts/creating-drive-plugin/</link><pubDate>Sat, 10 Dec 2022 02:58:16 +0200</pubDate><guid>https://zigius.github.io/posts/creating-drive-plugin/</guid><description>Im currently working on building my second brain. I use neovim for everything I can. Seems like a no brainer to also try and use neovim as my notetaking app. A second brain consists of notes, images, videos, and much more. This post will focus on my workflow for adding images to markdown files.
Storing images I store my notes in a github repo, and of course also locally on my laptop and phone.</description></item><item><title>The story of the content-length header</title><link>https://zigius.github.io/posts/nodejs_content_length_timeout/</link><pubDate>Tue, 06 Dec 2022 15:59:12 +0200</pubDate><guid>https://zigius.github.io/posts/nodejs_content_length_timeout/</guid><description>As part of my job, Me and my team are responsible for the data pipeline of our division. Our collection layer of all the analytics events is written in typescript with an express server. It is responsible for handling and processing more than 3M requests every minute.
As part of a rewrite of the collection layer, we noticed that we have requests that take more than a minute to progress. Our p99 response time is a lot better: So why do we have requests that take more than a minute to process?</description></item><item><title>How i created my blog in 30 minutes</title><link>https://zigius.github.io/posts/create_hugo_blog/</link><pubDate>Sun, 20 Nov 2022 09:03:20 -0800</pubDate><guid>https://zigius.github.io/posts/create_hugo_blog/</guid><description>Seems like everyone today has a blog, a vlog and a podcast.
This post will give you a hands on explanation on how to create your blog in 5 minutes, and deploy it on Github pages.
Steps Create the repo To keep things simple, we will create a github pages repository. For a more detailed instruction visit this link
First, go to github and create a new repository with your name.</description></item></channel></rss>